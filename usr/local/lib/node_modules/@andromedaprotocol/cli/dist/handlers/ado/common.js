"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptAdoType = exports.isADOOwner = void 0;
const common_1 = require("../../common");
const state_1 = __importDefault(require("../../state"));
const cmd_1 = require("../../cmd");
const { client } = state_1.default;
/**
 * Validates if the given address is the owner of a given ADO address
 * @param adoAddress
 * @param address
 * @returns
 */
async function isADOOwner(adoAddress, address) {
    const owner = await client.ado.getOwner(adoAddress);
    return address === owner;
}
exports.isADOOwner = isADOOwner;
async function promptAdoType(name, bread) {
    const adoTypes = await (0, common_1.displaySpinnerAsync)("Fetching ADO types...", async () => await client.os.adoDB.getAllADO());
    const input = await (0, cmd_1.promptWithExit)({
        prefix: bread ? `[Constructing ${bread.join(".")}]` : "",
        message: name,
        type: "autocomplete",
        name: "adoType",
        suggestOnly: true,
        source: (_answers, input = '') => {
            if (input.trim() === '')
                return adoTypes;
            return adoTypes.filter(a => a.includes(input));
        },
    });
    return input.adoType;
}
exports.promptAdoType = promptAdoType;
